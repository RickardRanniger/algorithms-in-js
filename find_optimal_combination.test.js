import { findOptimalCombination } from "./find_optimal_combination";

describe('Test combinations', () => {

    const combinations = [
        [21, [7], [7, 7, 7]],
        [22, [7], [7, 7, 7, 7]],
        [20, [7], [7, 7, 7]],
        [28, [7], [7, 7, 7, 7]],
        [21, [8, 1], [8, 8, 1, 1, 1, 1, 1]],
        [49, [20, 18, 8, 3], [20, 18, 8, 3]],
        [139, [20, 18, 8, 3], [20, 20, 20, 20, 20, 18, 18, 3]],
        [39, [12, 8, 6, 2], [12, 12, 8, 8]],
        [221, [99, 8, 6, 2], [99, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2]],
        [101, [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], [20, 20, 20, 20, 20, 1]],
        [1001, [1000, 1], [1000, 1]],
        [3, [2000, 1000, 2, 1], [2, 1]],
        [264, [99, 88, 77], [99, 88, 77]]
    ];

    it('Is the best solution returned', () => {
        combinations.forEach(c => expect(findOptimalCombination(c[0], c[1]).items).toStrictEqual(c[2]));
    });
});
